#include <pthread.h>
#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <semaphore.h>
#define M 4 //num of WR
#define N 3 //num of RE
unsigned int iter;
sem_t accessM,readresM,orderM;
unsigned int readers = 0;

void *reader(void *prm)
{
	int num1=*(int*)prm;
	int i=0,r;
	for(i;i<iter;i++)
	{
		
		if (sem_wait(&orderM)==0) printf("%d Читатель %d в очереди__________Ч%d\n",i,num1,num1);
		sem_wait(&readresM);
		if (readers == 0)			
			sem_wait(&accessM);				
		readers++;				
		sem_post(&orderM);					
		sem_post(&readresM);				

		printf("%d Работает читатель %d________________Ч%d\n",i,num1,num1);				
		r=1+rand()%4;
		sleep(r);
		sem_wait(&readresM);	
		readers--;							
		if (readers == 0)				
			sem_post(&accessM);		
		sem_post(&readresM);			
	}
}

void *writer(void *prm)
{
	int num2=*(int*)prm;
	int j=0,r;
	for(j;j<iter;j++)
	{
		if(sem_wait(&orderM)==0) printf("%d Писатель %d в очереди__________П%d\n",j,num2,num2); 
		sem_wait(&accessM);		
		sem_post(&orderM);					

		printf("%d Работает писатель %d________________П%d\n",j,num2,num2);			
		r=1+rand()%4;
		sleep(r);
		sem_post(&accessM);			
	}
}

void main()
{	
	pthread_t threadRE[N];
	pthread_t threadWR[M];
	sem_init(&accessM,0,1);
	sem_init(&readresM,0,1);
	sem_init(&orderM,0,1);

	printf("Введите количество итераций: ");
	scanf("%d",&iter);
	printf("Iter                         ОЧЕРЕДЬ/ВЫПОЛНЕНИЕ\n");
	int i;
	for(i=0;i<M;i++)
	{
		pthread_create(&(threadWR[i]),NULL,writer,(void*)&i);
	}
	for(i=0;i<N;i++)
	{
		pthread_create(&(threadRE[i]),NULL,reader,(void*)&i);
	}
	

	for(i=0;i<N;i++)
	{
		pthread_join(threadRE[i],NULL);
	}
	for(i=0;i<M;i++)
	{
		pthread_join(threadWR[i],NULL);
	}
	
	sem_destroy(&accessM);
	sem_destroy(&readresM);
	sem_destroy(&orderM);
}
